version: '3.5'

services:
  dashboard:
    image: charypar/swarm-dashboard:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # ports:
    #   - 4040:8080
    environment:
      - PORT=8080
    deploy:
      labels:
        - caddy=dashboard.${CLUSTER_DOMAIN}
        - caddy.reverse_proxy={{upstreams 8080}}
        - caddy.encode=gzip
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    networks:
      - caddy

  portainer:
    image: portainer/portainer:1.24.1-alpine
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify
    ports:
      - 5050:9000
    volumes:
      - portainer:/data
    deploy:
      labels:
        - caddy=portainer.${CLUSTER_DOMAIN}
        - caddy.reverse_proxy={{upstreams 9000}}
        - caddy.encode=gzip
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    networks:
      - caddy
      - admin

  portainer-agent:
    image: portainer/agent:linux-amd64-1.6.0-alpine
    environment:
      - AGENT_CLUSTER_ADDR=tasks.portainer-agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # ports:
    #   - 9001:9001
    networks:
      - admin
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  feeds:
    image: flaviostutz/docker-swarm-feeds:1.1.0
    # ports:
    #   - 5353:8000
    environment:
      - FEED_NAME=${CLUSTER_DOMAIN}
    deploy:
      labels:
        - caddy=feeds.${CLUSTER_DOMAIN}
        - caddy.reverse_proxy={{upstreams 8000}}
        - caddy.encode=gzip
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    networks:
      - caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  janitor:
    image: flaviostutz/docker-janitor:latest
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    environment:
      - SLEEP_TIME=86400
      - UNUSED_TIME=24h
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  admin:
    external: true
    # driver: overlay
    # "docker network create admin --scope swarm -d overlay"
  caddy:
    external: true

volumes:
  portainer:
