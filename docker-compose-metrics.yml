version: '3.5'

services:
  dockerd-exporter:
    image: stefanprodan/dockerd-exporter:latest
    networks:
      - metrics
    # environment:
    #   - IN=172.18.0.1:9323
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  node-exporter:
    image: flaviostutz/docker-swarm-node-exporter:1.1.1
    environment:
      - NODE_ID={{.Node.ID}}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    networks:
      - metrics
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
     
  cadvisor:
    image: google/cadvisor:v0.33.0
    command: -logtostderr -docker_only
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - metrics
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  perfstat:
    image: flaviostutz/perfstat:v0.4.0
    privileged: true
    volumes:
      - /etc/hostname:/etc/hostname          
    networks:
      - metrics
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  alertmanager:
    image: stefanprodan/swarmprom-alertmanager:v0.15.3
    environment:
      - SLACK_URL=${SLACK_URL:-https://hooks.slack.com/services/TOKEN}
      - SLACK_CHANNEL=${SLACK_CHANNEL:-general}
      - SLACK_USER=${SLACK_USER:-alertmanager}
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    volumes:
      - alertmanager:/alertmanager
    networks:
      - metrics
      - caddy
    deploy:
      labels:
        - caddy=http://alertmanager.${CLUSTER_DOMAIN} https://alertmanager.${CLUSTER_DOMAIN}
        - caddy.reverse_proxy={{upstreams 9093}}
        - caddy.encode=gzip
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  unsee:
    image: cloudflare/unsee:v0.9.2
    environment:
      - "ALERTMANAGER_URIS=default:http://alertmanager:9093"
    networks:
      - metrics
      - caddy
    deploy:
      labels:
        - caddy=http://unsee.${CLUSTER_DOMAIN} https://unsee.${CLUSTER_DOMAIN}
        - caddy.reverse_proxy={{upstreams 8080}}
        - caddy.encode=gzip
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  prometheus:
    image: flaviostutz/prometheus:2.20.1.0
    environment:
      - SCRAPE_INTERVAL=15s
      - SCRAPE_TIMEOUT=10s
      - ALERTMANAGER_TARGETS=alertmanager:9093
      # - STATIC_SCRAPE_TARGETS=traefik@traefik:80
      - DNS_SCRAPE_TARGETS=dockerd-exporter@tasks.dockerd-exporter:9323/metrics cadvisor@tasks.cadvisor:8080/metrics node-exporter@tasks.node-exporter:9100/metrics perfstat@tasks.perfstat:8880/metrics
    volumes:
      - prometheus:/prometheus
    networks:
      - metrics
      - caddy
    deploy:
      labels:
        - caddy=http://prometheus.${CLUSTER_DOMAIN} https://prometheus.${CLUSTER_DOMAIN}
        - caddy.reverse_proxy={{upstreams 9090}}
        - caddy.encode=gzip
        - caddy.basicauth=/*
        - caddy.basicauth.admin=JDJhJDA4JGFGYXo1a1ZtckJXcTZqU2FxNzY4OHVtQ1NZT0JpS3llMmNkOGx3NFo1bnIuQWNwb2FkTGR1
        #admin/admin123
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M

  grafana:
    image: flaviostutz/docker-swarm-grafana:7.1.3.3
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - metrics
      - caddy
    deploy:
      labels:
        - caddy=http://grafana.${CLUSTER_DOMAIN} https://grafana.${CLUSTER_DOMAIN}
        - caddy.reverse_proxy={{upstreams 3000}}
        - caddy.encode=gzip
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

networks:
  caddy:
    external: true
  metrics:
    external: true
    # "docker network create metrics --scope swarm -d overlay"

volumes:
  prometheus:
  grafana:
  alertmanager:

